<?xml version="1.0" encoding="UTF-8"?>
<INPUT>
	<EVENT_INPUT>
		<AUTOMATON>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 event per line, formatted as <i>LABEL[,OBSERVABLE,CONTROLLABLE]</i>.<br/><b><u>EXAMPLE 1</u></b>: '<i>EventName,T,F</i>' denotes an event called <b>EventName</b> that is <b>observable</b> but <b>not controllable</b> for 1 controller.<br/><b><u>EXAMPLE 2</u></b>: '<i>EventName,TT,FT</i>' denotes an event called <b>EventName</b> that is <b>observable</b> but <b>not controllable</b> for the first controller, and is <b>observable</b> and <b>controllable</b> for the second controller.<br/><b><u>NOTE</u></b>: '<i>T</i>' and '<i>F</i>' are case insensitive. If the observable and controllable properties are omitted, then it is assumed that they are observable and controllable for all controllers. It is not possible, however, to omit the properties for some controllers, but not all.</div></html>
		</AUTOMATON>
		<U_STRUCTURE>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 event vector per line, formatted as <i>&lt;Event1,Event2...&gt;</i>.<br/><b><u>EXAMPLE</u></b>: '<i>&lt;FirstEvent,SecondEvent,ThirdEvent&gt;</i>' denotes an event vector containing the 3 events named <b>FirstEvent</b>, <b>SecondEvent</b>, and <b>ThirdEvent</b>.<br/><b><u>NOTE</u></b>: Unobservable events for a given controller in an event vector are denoted by an asterisk.</div></html>
		</U_STRUCTURE>
		<PRUNED_U_STRUCTURE>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 event vector per line, formatted as <i>&lt;Event1,Event2...&gt;</i>.<br/><b><u>EXAMPLE</u></b>: '<i>&lt;FirstEvent,SecondEvent,ThirdEvent&gt;</i>' denotes an event vector containing the 3 events named <b>FirstEvent</b>, <b>SecondEvent</b>, and <b>ThirdEvent</b>.<br/><b><u>NOTE</u></b>: Unobservable events for a given controller in an event vector are denoted by an asterisk.</div></html>
		</PRUNED_U_STRUCTURE>
		<CRUSH>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 event vector per line, formatted as <i>&lt;Event1,Event2...&gt;</i>.<br/><b><u>EXAMPLE</u></b>: '<i>&lt;FirstEvent,SecondEvent,ThirdEvent&gt;</i>' denotes an event vector containing the 3 events named <b>FirstEvent</b>, <b>SecondEvent</b>, and <b>ThirdEvent</b>.<br/><b><u>NOTE</u></b>: Unobservable events for a given controller in an event vector are denoted by an asterisk.</div></html>
		</CRUSH>
	</EVENT_INPUT>

	<STATE_INPUT>
		<AUTOMATON>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 state per line, formatted as <i>[@]LABEL[,MARKED]</i> (where the '@' symbol denotes that this is the initial state).<br/><b><u>EXAMPLE 1</u></b>: <i>'StateName,F'</i> denotes a state called <b>StateName</b> that is <b>unmarked</b>.<br/><b><u>EXAMPLE 2</u></b>: <i>'@StateName'</i> denotes a state called <b>StateName</b> that is the <b>initial state</b> and is <b>marked</b>.<br/><b><u>NOTE</u></b>: '<i>T</i>' and '<i>F</i>' are case insensitive. If omitted, the default value is '<i>T</i>'. There is only allowed to be one initial state.</div></html>
		</AUTOMATON>
		<U_STRUCTURE>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 state per line, formatted as <i>[@]LABEL</i> (where the '@' symbol denotes that this is the initial state).<br/><b><u>EXAMPLE 1</u></b>: <i>'StateName'</i> denotes a state called <b>StateName</b>.<br/><b><u>EXAMPLE 2</u></b>: <i>'@StateName'</i> denotes a state called <b>StateName</b> that is the <b>initial state</b>
			</div></html>
		</U_STRUCTURE>
		<PRUNED_U_STRUCTURE>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 state per line, formatted as <i>[@]LABEL</i> (where the '@' symbol denotes that this is the initial state).<br/><b><u>EXAMPLE 1</u></b>: <i>'StateName'</i> denotes a state called <b>StateName</b>.<br/><b><u>EXAMPLE 2</u></b>: <i>'@StateName'</i> denotes a state called <b>StateName</b> that is the <b>initial state</b></div></html>
		</PRUNED_U_STRUCTURE>
		<CRUSH>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 state vector per line, formatted as <i>[@]&lt;State1,State2...&gt;</i> (where the '@' symbol denotes that this is the initial state).<br/><b><u>EXAMPLE</u></b>: '<i>&lt;FirstState,SecondState,ThirdState&gt;</i>' denotes a state vector containing the three states named <b>FirstState</b>, <b>SecondState</b>, and <b>ThirdState</b>.</div></html>
		</CRUSH>

	</STATE_INPUT>

	<TRANSITION_INPUT>
		<AUTOMATON>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 transition per line, formatted as <i>INITIAL_STATE,EVENT,TARGET_STATE[:BAD]</i>.<br/><b><u>EXAMPLE 1</u></b>: <i>'FirstState,Event,SecondState'</i> denotes a transition that goes from the state <b>'FirstState'</b> to the state <b>'SecondState'</b> by the event called <b>'Event'</b>.<br/><b><u>EXAMPLE 2</u></b>: <i>'FirstState,Event,SecondState:BAD'</i> denotes a transition that is identical to the transition in example 1, except that it has been marked as a bad transition (which is used for synchronized composition).</div></html>
		</AUTOMATON>
		<U_STRUCTURE>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 transition per line, formatted as <i>INITIAL_STATE,EVENT,TARGET_STATE[:SPECIAL_PROPERTIES]</i>, which are used in the synchronized composition operation).<br/><b><u>EXAMPLE</u></b>: <i>'FirstState,Event,SecondState'</i> denotes a transition that goes from the state <b>'FirstState'</b> to the state <b>'SecondState'</b> by the event vector called <b>'Event'</b>.<br/><b><u>NOTE</u></b>: <i>SPECIAL_PROPERTIES</i> can be added to a transition by appending ':NAME_OF_PROPERTY'. Additional properties are separated by commas.<br/><b>Names of special properties in a U-Structure:</b>: <i>'UNCONDITIONAL_VIOLATION'</i>, <i>'CONDITIONAL_VIOLATION'</i>, <i>'INVALID_COMMUNICATION'*</i>, <i>'POTENTIAL_COMMUNICATION'**</i>, and <i>'NASH_COMMUNICATION'***</i>.<br/><i>*'INVALID_COMMUNICATION' is used to mark a communication which has been added to the U-Structure for mathematical completion.</i><br/><i>**'POTENTIAL_COMMUNICATION' must have the communication roles appended to it. For example, appending '-SRR' (where the dash is simply a separator) means that controller 1 is sending the communication to controllers 2 and 3. Appending '-R*S' means that controller 3 is sending the communication to controller 1 (where '*' denotes that a controller that doesn't have a role in the communication).</i><br/><i>***'NASH_COMMUNICATION' must have the communication roles appended to it, as well as cost and probability information. Appending '-RS-1.2-0.5' means that controller 2 is sending the communication to controller 1 at a cost of 1.2 and probability of this communication happening in the system is 50%.</i></div></html>
		</U_STRUCTURE>
		<PRUNED_U_STRUCTURE>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 transition per line, formatted as <i>INITIAL_STATE,EVENT,TARGET_STATE[:SPECIAL_PROPERTIES]</i>, which are used in the synchronized composition operation).<br/><b><u>EXAMPLE</u></b>: <i>'FirstState,Event,SecondState'</i> denotes a transition that goes from the state <b>'FirstState'</b> to the state <b>'SecondState'</b> by the event vector called <b>'Event'</b>.<br/><b><u>NOTE</u></b>: <i>SPECIAL_PROPERTIES</i> can be added to a transition by appending ':NAME_OF_PROPERTY'. Additional properties are separated by commas.<br/><b>Names of special properties in a pruned U-Structure:</b>: <i>'UNCONDITIONAL_VIOLATION'</i>, <i>'CONDITIONAL_VIOLATION'</i>, <i>'COMMUNICATION'*</i>, and <i>'NASH_COMMUNICATION'**</i>.<br/><i>*'COMMUNICATION' must have the communication roles appended to it. For example, appending '-SRR' (where the dash is simply a separator) means that controller 1 is sending the communication to controllers 2 and 3. Appending '-R*S' means that controller 3 is sending the communication to controller 1 (where '*' denotes that a controller that doesn't have a role in the communication).</i><br/><i>**'NASH_COMMUNICATION' must have the communication roles appended to it, as well as cost and probability information. Appending '-RS-1.2-0.5' means that controller 2 is sending the communication to controller 1 at a cost of 1.2 and probability of this communication happening in the system is 50%.</i></div></html>
		</PRUNED_U_STRUCTURE>
		<CRUSH>
		 	<html><div style="width:TOOL_TIP_WIDTHpx">1 transition per line, formatted as <i>INITIAL_STATE,EVENT,TARGET_STATE[:SPECIAL_PROPERTIES]</i>, which are used in the synchronized composition operation).<br/><b><u>EXAMPLE</u></b>: <i>'FirstState,Event,SecondState'</i> denotes a transition that goes from the state <b>'FirstState'</b> to the state <b>'SecondState'</b> by the event vector called <b>'Event'</b>.<br/><b><u>NOTE</u></b>: <i>SPECIAL_PROPERTIES</i> can be added to a transition by appending ':NAME_OF_PROPERTY'. Additional properties are separated by commas.<br/><b>Names of special properties in a Crush:</b>: <i>'NASH_COMMUNICATION'*</i>.<br/><i>*'NASH_COMMUNICATION' must have the communication roles appended to it, as well as cost and probability information. Appending '-RS-1.2-0.5' means that controller 2 is sending the communication to controller 1 at a cost of 1.2 and probability of this communication happening in the system is 50%.</i></div></html>
		</CRUSH>
	</TRANSITION_INPUT>

</INPUT>