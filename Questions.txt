HOURS:
Monday, August 17: 5 hours 30 minutes
Tuesday, August 18: 4 hours 30 minutes
Wednesday, August 19: 8:50 - = ~16
                                       = ~26
                                       = ~35 (probably won't hit 35 this week..)
JAVADOC TO-DO LIST:
  
  TestAutomata.java

QUESTIONS:

  -show Dr. Ricker the lemke-howson program
  -how far into the program can a user get with an uncontrollable system?

SHORT-TERM:
  -hasViolations() - waiting on Dr.Ricker's reply, already has been implemented though
  -GUI Tests?? - http://abbot.sourceforge.net/doc/quick-start.shtml
  -NSGA-II algorithm:
    -Code algorithms 3 and 4
  -add buttons to mark special transitions in GUI? (menu options would work great for this! With checkboxes), specifically marking Bad Transitions is useful
  -Documentation for each operation on website
  -http://tutorials.jenkov.com/java-reflection/private-fields-and-methods.html

POTENTIAL/MINOR:

  -add buttons to add events, add states, and add transitions (maybe little plus icons?)
  -warn user when they've specified more than one initial state (only the last one is considered anyway)
  -tooltips dissapear when button is clicked
  -In Automaton::addState(), there is the potential for 3 calls to recreateBinaryFile. This should be combined into one call.
  -Currently regenerating uStructures when clicking "Generate Automaton" button (but they were already generated before when testing for feasibility, so we should store them). NOTE: While this would be more efficient, I do not see a clean way of implementing it
  -Multiple violations on the same transition are not properly drawn in graphviz (we should draw them as two separate transitions). Is it even possible for multiple violations to be in the same place??
  -Warning message when saving in GUI to overwrite files
  -There are 3 tooltips left to go in the XML file (from the buttons to generate the image, view image, and generate automaton)
  -Co-acessible warning message if there are no marked states
  -Allow modifications to automaton without regenerating the entire thing (example: adding a state or a transition)
  -Consider using Files.createTempDirectory() and Files.createTempFile() instead of creating our own temporary directories, look at File.deleteOnExit()
  -What about if multiple JDec processes are being run at the same time?? Create temporary folder based on PID (NOTE: PID can't easily be found)